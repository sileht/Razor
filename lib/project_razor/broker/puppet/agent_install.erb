#!/bin/bash

set -u
set -e

function install_puppet() {
    # TODO add support for versions
    #gem install puppet --no-ri --no-rdoc
    apt-get install -y --force-yes puppet
}

function configure_puppet() {
    mkdir -p /etc/puppet
    cat >/etc/puppet/puppet.conf <<EOFPUPPETCONF
[main]
logdir = /var/log/puppet
rundir = /var/run/puppet
vardir = /var/lib/puppet
ssldir = /var/lib/puppet/ssl
pluginsync = true
report = true
listen = true
ca_server = <%= @options[:ca_server] %>
server = <%= @options[:server] %>
certname = <%= @options[:puppetagent_certname] %>
EOFPUPPETCONF

cat > /etc/puppet/auth.conf <<EOF
path    /run
method  save
auth    any
allow   <%= @options[:server] %>
EOF

    if [ -f /etc/default/puppet ]; then
        cat > /etc/default/puppet <<EOFPUPPETDEFAULT
# Defaults for puppet - sourced by /etc/init.d/puppet

# Start puppet on boot?
START=yes

# Startup options
DAEMON_OPTS=''
EOFPUPPETDEFAULT
    fi
}

function start_puppet() {
#    puppet agent -t
    puppet agent -t --noop
    #/usr/bin/nohup puppet agent &
    /etc/init.d/puppet start
}

#This fuction is not called if no custom facts are given
#
# The Puppet Labs stdlib module is required for this to work
#It can be installed using:
# puppet-module install puppetlabs/stdlib
function facts_dot_d() {
    mkdir -p /etc/facter/facts.d
    <% if @options[:metadata] %> echo Installing custom facts
        <% @options[:metadata].each do |fact,value| %> echo '<%= fact %>=<%= value %>' > /etc/facter/facts.d/<%= fact %>.txt
    <% end %> <% end %>
}

function provision_puppet() {
    install_puppet
    configure_puppet
    <%= 'facts_dot_d' if @options[:metadata] %>
    start_puppet
    echo Puppet installation finished!
    exit 0
}

provision_puppet
